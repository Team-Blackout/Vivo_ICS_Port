# Script made by Team Blackout

show_progress(0.500000, 0);

assert(
    getprop("ro.product.device") == "ace"     ||
    getprop("ro.product.device") == "glacier" ||
    getprop("ro.product.device") == "incs"    ||
    getprop("ro.product.device") == "saga"    ||
    getprop("ro.product.device") == "vigor"   ||
    getprop("ro.product.device") == "vivo"
);

show_progress(0.500000, 40);

ifelse(
    getprop("ro.product.device") == "vigor",
    (
        mount("ext4", "EMMC", "/dev/block/mmcblk0p35", "/data");
        mount("ext4", "EMMC", "/dev/block/mmcblk0p29", "/system");
    )
);
ifelse(
    getprop("ro.product.device") == "evita",
    (
        mount("ext4", "EMMC", "/dev/block/mmcblk0p35", "/data");
        mount("ext4", "EMMC", "/dev/block/mmcblk0p33", "/system");
    )
);
ifelse(
    getprop("ro.product.device") == "incs"  ||
    getprop("ro.product.device") == "saga"  ||
    getprop("ro.product.device") == "vivo",
    (
        mount("ext4", "MMC", "/dev/block/mmcblk0p26", "/data");
        mount("ext4", "MMC", "/dev/block/mmcblk0p25", "/system");
    )
);
ifelse(
    getprop("ro.product.device") == "ace"     ||
    getprop("ro.product.device") == "glacier",
    (
        mount("ext4", "EMMC", "/dev/block/mmcblk0p26", "/data");
        mount("ext4", "EMMC", "/dev/block/mmcblk0p25", "/system");
    )
);

package_extract_dir("tmp", "/tmp");
set_perm_recursive(0, 0, 0777, 0777, "/tmp/");

if
    file_getprop("/tmp/aroma-data/wipe.prop","selected.0") == "2"
then
    set_progress(0.02);
    ui_print("@  Executing Full Wipe");
    ui_print("-> Preparing System for full wipe");
    
    ui_print("-> Erasing & Formatting /cache as EXT4");
    unmount("/cache");
    run_program("/sbin/erase_image", "cache");
    ifelse(
        getprop("ro.product.device") == "vigor",
        (
            format("ext4", "EMMC", "/dev/block/mmcblk0p36");
        )
    );
    ifelse(
        getprop("ro.product.device") == "incs"  ||
        getprop("ro.product.device") == "saga"  ||
        getprop("ro.product.device") == "vivo",
        (
            format("ext4", "MMC", "/dev/block/mmcblk0p27");
        )
    );
    ifelse(
        getprop("ro.product.device") == "ace"     ||
        getprop("ro.product.device") == "glacier",
        (
            format("ext4", "EMMC", "/dev/block/mmcblk0p27");
        )
    );
    run_program("/sbin/sleep", "2");
    
    ui_print("-> Erasing & Formatting /system as EXT4");
    unmount("/system");
    run_program("/sbin/erase_image", "system");
    ifelse(
        getprop("ro.product.device") == "vigor",
        (
            format("ext4", "EMMC", "/dev/block/mmcblk0p29");
        )
    );
    ifelse(
        getprop("ro.product.device") == "incs"  ||
        getprop("ro.product.device") == "saga"  ||
        getprop("ro.product.device") == "vivo",
        (
            format("ext4", "MMC", "/dev/block/mmcblk0p25");
        )
    );
    ifelse(
        getprop("ro.product.device") == "ace"     ||
        getprop("ro.product.device") == "glacier",
        (
            format("ext4", "EMMC", "/dev/block/mmcblk0p25");
        )
    );
    run_program("/sbin/sleep", "2");
    
    set_progress(0.03);
    ui_print("-> Erasing & Formatting /data as EXT4");
    unmount("/data");
    run_program("/sbin/erase_image", "userdata");
    ifelse(
        getprop("ro.product.device") == "vigor",
        (
            format("ext4", "EMMC", "/dev/block/mmcblk0p35");
        )
    );
    ifelse(
        getprop("ro.product.device") == "incs" ||
        getprop("ro.product.device") == "saga" ||
        getprop("ro.product.device") == "vivo",
        (
            format("ext4", "MMC", "/dev/block/mmcblk0p26");
        )
    );
    ifelse(
        getprop("ro.product.device") == "ace"     ||
        getprop("ro.product.device") == "glacier",
        (
            format("ext4", "EMMC", "/dev/block/mmcblk0p26");
        )
    );
    run_program("/sbin/sleep", "2");
    
    set_progress(0.04);
    ui_print("-> Erasing /boot Partition");
    unmount("/boot");
    run_program("/sbin/erase_image", "boot");
    run_program("/sbin/sleep", "2");
    
    set_progress(0.05);
    ui_print("-> Removing System Files from SD Card");
    delete_recursive("/sdcard/.android_secure");
    delete_recursive("/sdcard/.bookmark_thumb1");
    delete_recursive("/sdcard/.data/footprints");
    delete_recursive("/sdcard/.data/mail");
    delete_recursive("/sdcard/Android/data/com.android.providers.media");
    delete_recursive("/sdcard/Android/data/com.google.android.apps.genie.geniewidget.news-content-cache");
    delete_recursive("/sdcard/Android/data/com.google.android.apps.maps");
    delete_recursive("/sdcard/.data/navigator/Data/Temporary");
    delete_recursive("/sdcard/LazyList");
    delete_recursive("/sdcard/LOST.DIR");
    run_program("/sbin/sleep", "2");

    set_progress(0.06);
    ui_print("-> Checking Filesystems for Errors");
	ifelse(
        getprop("ro.product.device") == "vigor",
        (
            run_program("/sbin/e2fsck", "-p", "/dev/block/mmcblk0p29");
            run_program("/sbin/e2fsck", "-p", "/dev/block/mmcblk0p35");
            run_program("/sbin/e2fsck", "-p", "/dev/block/mmcblk0p36");
        )
    );
    ifelse(
        getprop("ro.product.device") == "ace"     ||
        getprop("ro.product.device") == "glacier" ||
        getprop("ro.product.device") == "incs"    ||
        getprop("ro.product.device") == "saga"    ||
        getprop("ro.product.device") == "vivo",
        (
            run_program("/sbin/e2fsck", "-p", "/dev/block/mmcblk0p25");
            run_program("/sbin/e2fsck", "-p", "/dev/block/mmcblk0p26");
            run_program("/sbin/e2fsck", "-p", "/dev/block/mmcblk0p27");
        )
    );
    run_program("/sbin/sleep", "2");
endif;

set_progress(0.07);
show_progress(0.07, 9);
ui_print("@  Flashing Data");
ui_print("-> Writing Data");
ifelse(
    getprop("ro.product.device") == "vigor",
    (
        mount("ext4", "EMMC", "/dev/block/mmcblk0p35", "/data");
    )
);
ifelse(
    getprop("ro.product.device") == "incs"  ||
    getprop("ro.product.device") == "saga"  ||
    getprop("ro.product.device") == "vivo",
    (
        mount("ext4", "MMC", "/dev/block/mmcblk0p26", "/data");
    )
);
ifelse(
    getprop("ro.product.device") == "ace"     ||
    getprop("ro.product.device") == "glacier",
    (
        mount("ext4", "EMMC", "/dev/block/mmcblk0p26", "/data");
    )
);
package_extract_dir("data", "/data");

set_progress(0.08);
show_progress(0.7,1380);
unmount("/system");
ifelse(
    getprop("ro.product.device") == "vigor",
    (
        format("ext4", "EMMC", "/dev/block/mmcblk0p29");
    )
);
ifelse(
    getprop("ro.product.device") == "incs"  ||
    getprop("ro.product.device") == "saga"  ||
    getprop("ro.product.device") == "vivo",
    (
        format("ext4", "MMC", "/dev/block/mmcblk0p25");
    )
);
ifelse(
    getprop("ro.product.device") == "ace"     ||
    getprop("ro.product.device") == "glacier",
    (
        format("ext4", "EMMC", "/dev/block/mmcblk0p25");
    )
);
ui_print("@  Flashing System");
ui_print("-> Writing System");
ifelse(
    getprop("ro.product.device") == "vigor",
    (
        mount("ext4", "EMMC", "/dev/block/mmcblk0p29", "/system");
    )
);
ifelse(
    getprop("ro.product.device") == "incs"  ||
    getprop("ro.product.device") == "saga"  ||
    getprop("ro.product.device") == "vivo",
    (
        mount("ext4", "MMC", "/dev/block/mmcblk0p25", "/system");
    )
);
ifelse(
    getprop("ro.product.device") == "ace"     ||
    getprop("ro.product.device") == "glacier",
    (
        mount("ext4", "EMMC", "/dev/block/mmcblk0p25", "/system");
    )
);
delete_recursive("/data/system.vendor");
run_program("/sbin/mkdir","-p","/data/system.vendor");
set_perm_recursive(1000, 1000, 0775, 0644, "/data/system.vendor");
symlink("/data/system.vendor", "/system/vendor");

package_extract_dir("system", "/system");
assert(package_extract_dir("devices/" + getprop("ro.product.device") + "/system", "/system"));

ifelse(
    run_program("/sbin/grep","androidboot.mid=PD9814000","/proc/cmdline") == "0",
    (
        ui_print("    Installing Telus HD files ...");
        delete("/system/etc/AIC3254_REG.csv");
        package_extract_dir("devices/telus/system", "/system");
    )
);

ifelse(
    run_program("/sbin/grep","androidboot.mid=PD9812000","/proc/cmdline") == "0",
    (
        ui_print("    Installing Inspire 4G files ...");
        delete("/system/etc/AIC3254_REG.csv");
        package_extract_dir("devices/inspire/system", "/system");
    )
);

set_progress(0.9);
ui_print("@  Setting Symlinks and Permissions");
ui_print("-> Setting Symlinks and Permissions");

symlink("/data/local/bootanimation.zip","/system/customize/resource/bootanimation.zip");
symlink("/data/local/downanimation.zip","/system/customize/resource/downanimation.zip");

symlink("busybox", "/system/xbin/[", "/system/xbin/[[",
        "/system/xbin/arp", "/system/xbin/ash", "/system/xbin/awk",
        "/system/xbin/basename", "/system/xbin/bbconfig", "/system/xbin/brctl",
        "/system/xbin/bunzip2", "/system/xbin/bzcat", "/system/xbin/bzip2",
        "/system/xbin/cal", "/system/xbin/cat", "/system/xbin/catv",
        "/system/xbin/chgrp", "/system/xbin/chmod", "/system/xbin/chown",
        "/system/xbin/chroot", "/system/xbin/cksum", "/system/xbin/clear",
        "/system/xbin/cmp", "/system/xbin/cp", "/system/xbin/cpio",
        "/system/xbin/cut", "/system/xbin/date", "/system/xbin/dc",
        "/system/xbin/dd", "/system/xbin/depmod", "/system/xbin/devmem",
        "/system/xbin/df", "/system/xbin/diff", "/system/xbin/dirname",
        "/system/xbin/dmesg", "/system/xbin/dnsd", "/system/xbin/dos2unix",
        "/system/xbin/du", "/system/xbin/echo", "/system/xbin/ed",
        "/system/xbin/egrep", "/system/xbin/env", "/system/xbin/expr",
        "/system/xbin/false", "/system/xbin/fdisk", "/system/xbin/fgrep",
        "/system/xbin/find", "/system/xbin/fold", "/system/xbin/free",
        "/system/xbin/freeramdisk", "/system/xbin/fuser", "/system/xbin/getopt",
        "/system/xbin/grep", "/system/xbin/gunzip", "/system/xbin/gzip",
        "/system/xbin/head", "/system/xbin/hexdump", "/system/xbin/id",
        "/system/xbin/ifconfig", "/system/xbin/insmod", "/system/xbin/install",
        "/system/xbin/ip", "/system/xbin/kill", "/system/xbin/killall",
        "/system/xbin/killall5", "/system/xbin/length", "/system/xbin/less",
        "/system/xbin/ln", "/system/xbin/losetup", "/system/xbin/ls",
        "/system/xbin/lsmod", "/system/xbin/lspci", "/system/xbin/lsusb",
        "/system/xbin/lzop", "/system/xbin/lzopcat", "/system/xbin/md5sum",
        "/system/xbin/mkdir", "/system/xbin/mke2fs", "/system/xbin/mkfifo",
        "/system/xbin/mkfs.ext2", "/system/xbin/mknod", "/system/xbin/mkswap",
        "/system/xbin/mktemp", "/system/xbin/modprobe", "/system/xbin/more",
        "/system/xbin/mount", "/system/xbin/mountpoint", "/system/xbin/mv",
        "/system/xbin/netstat", "/system/xbin/nice", "/system/xbin/nohup",
        "/system/xbin/nslookup", "/system/xbin/ntpd", "/system/xbin/od",
        "/system/xbin/patch", "/system/xbin/pgrep", "/system/xbin/pidof",
        "/system/xbin/ping", "/system/xbin/pkill", "/system/xbin/printenv",
        "/system/xbin/printf", "/system/xbin/ps", "/system/xbin/pwd",
        "/system/xbin/rdev", "/system/xbin/readlink", "/system/xbin/realpath",
        "/system/xbin/renice", "/system/xbin/reset", "/system/xbin/rm",
        "/system/xbin/rmdir", "/system/xbin/rmmod", "/system/xbin/route",
        "/system/xbin/run-parts", "/system/xbin/sed", "/system/xbin/seq",
        "/system/xbin/setsid", "/system/xbin/sh", "/system/xbin/sha1sum",
        "/system/xbin/sha256sum", "/system/xbin/sha512sum",
        "/system/xbin/sleep", "/system/xbin/sort", "/system/xbin/split",
        "/system/xbin/stat", "/system/xbin/strings", "/system/xbin/stty",
        "/system/xbin/swapoff", "/system/xbin/swapon", "/system/xbin/sync",
        "/system/xbin/sysctl", "/system/xbin/tac", "/system/xbin/tail",
        "/system/xbin/tar", "/system/xbin/tee", "/system/xbin/telnet",
        "/system/xbin/test", "/system/xbin/tftp", "/system/xbin/time",
        "/system/xbin/top", "/system/xbin/touch", "/system/xbin/tr",
        "/system/xbin/traceroute", "/system/xbin/true", "/system/xbin/tty",
        "/system/xbin/tune2fs", "/system/xbin/umount", "/system/xbin/uname",
        "/system/xbin/uniq", "/system/xbin/unix2dos", "/system/xbin/unlzop",
        "/system/xbin/unzip", "/system/xbin/uptime", "/system/xbin/usleep",
        "/system/xbin/uudecode", "/system/xbin/uuencode", "/system/xbin/vi",
        "/system/xbin/watch", "/system/xbin/wc", "/system/xbin/wget",
        "/system/xbin/which", "/system/xbin/whoami", "/system/xbin/xargs",
        "/system/xbin/yes",
        "/system/xbin/zcat");
symlink("toolbox", "/system/bin/cat", "/system/bin/cmp",
        "/system/bin/date", "/system/bin/dd", "/system/bin/dmesg",
        "/system/bin/getevent", "/system/bin/getprop", "/system/bin/hd",
        "/system/bin/id", "/system/bin/ifconfig", "/system/bin/iftop",
        "/system/bin/insmod", "/system/bin/ioctl", "/system/bin/ionice",
        "/system/bin/kill", "/system/bin/log", "/system/bin/lsmod",
        "/system/bin/nandread", "/system/bin/netstat",
        "/system/bin/newfs_msdos", "/system/bin/notify", "/system/bin/printenv",
        "/system/bin/ps", "/system/bin/reboot", "/system/bin/renice",
        "/system/bin/rmdir", "/system/bin/rmmod", "/system/bin/route",
        "/system/bin/schedtop", "/system/bin/sendevent",
        "/system/bin/setconsole", "/system/bin/setprop", "/system/bin/sleep",
        "/system/bin/smd", "/system/bin/start", "/system/bin/stop",
        "/system/bin/sync", "/system/bin/top", "/system/bin/uptime",
        "/system/bin/vmstat", "/system/bin/watchprops",
        "/system/bin/wipe");
symlink("mksh", "/system/bin/sh");
symlink("/factory/hdcp.keys", "/system/vendor/firmware/hdcp.keys");
symlink("/system/xbin/sqlite3", "/system/bin/sqlite3");
symlink("/proc/calibration", "/system/etc/calibration");
set_perm_recursive(0, 0, 0755, 0644, "/system");
set_perm_recursive(0, 2000, 0755, 0755, "/system/bin");
set_perm(0, 0, 0755, "/system/etc/mkshrc");
set_perm(0, 0, 0755, "/system/etc/init.d");
set_perm(0, 2000, 0755, 0755, "/system/etc/init.post_boot.sh");
set_perm(0, 3003, 06755, "/system/bin/ip");
set_perm(0, 3003, 02750, "/system/bin/netcfg");
set_perm(0, 3004, 02755, "/system/bin/ping");
set_perm(0, 2000, 06755, "/system/bin/reboot");
set_perm(0, 2000, 06750, "/system/bin/run-as");
set_perm_recursive(1002, 1002, 0755, 0440, "/system/etc/bluetooth");
set_perm(0, 0, 0755, "/system/etc/bluetooth");
set_perm(1000, 1000, 0640, "/system/etc/bluetooth/auto_pairing.conf");
set_perm(3002, 3002, 0444, "/system/etc/bluetooth/blacklist.conf");
set_perm(1002, 1002, 0440, "/system/etc/dbus.conf");
set_perm(1014, 2000, 0550, "/system/etc/dhcpcd/dhcpcd-run-hooks");
set_perm(0, 0, 04755, "/system/etc/ppp/ip-up-vpn");
set_perm(0, 2000, 0550, "/system/etc/init.goldfish.sh");
set_perm(0, 2000, 0755, "/system/xbin/sqlite3");
set_perm_recursive(0, 0, 0755, 0555, "/system/etc/ppp");
set_perm_recursive(0, 2000, 0755, 0755, "/system/xbin");
set_perm_recursive(0, 2000, 0755, 0750, "/system/etc/init.d");
set_perm(0, 0, 0755, "/system/etc/init.d");

ifelse(
    getprop("ro.product.device") == "ace"     ||
    getprop("ro.product.device") == "glacier",
    (
        symlink("fw_bcm4329.bin", "/system/etc/firmware/fw_bcm4330_b2.bin");
        symlink("fw_bcm4329_apsta.bin", "/system/etc/firmware/fw_bcm4330_apsta_b2.bin");
        symlink("fw_bcm4329_p2p.bin", "/system/etc/firmware/fw_bcm4330_p2p_b2.bin");
    )
);

delete("/system/bin/su");
symlink("/system/xbin/su", "/system/bin/su");
set_perm(0, 0, 06755, "/system/xbin/su");

set_perm(0, 0, 04755, "/system/xbin/busybox");
set_perm(0, 0, 06755, "/system/xbin/tcpdump");
set_progress(0.96);
ui_print("@  Configuring Device");
ui_print("-> Configuring Device");
set_perm(0, 0, 0777, "/tmp/modelid_cfg.sh");
run_program("/tmp/modelid_cfg.sh");

set_progress(0.97);
ui_print("-> Deleting Dalvik-Cache");
delete_recursive("/data/dalvik-cache");
unmount("/data");

ui_print("-> Flashing Kernel");
package_extract_file("kernel/" + getprop("ro.product.device") + "/boot.img", "/tmp/boot.img");
write_raw_image("/tmp/boot.img", "boot");
delete("/tmp/boot.img");

ui_print("-> Formatting Cache");
unmount("/cache");
ifelse(
    getprop("ro.product.device") == "vigor",
    (
        format("ext4", "EMMC", "/dev/block/mmcblk0p36");
    )
);
ifelse(
    getprop("ro.product.device") == "incs"  ||
    getprop("ro.product.device") == "saga"  ||
    getprop("ro.product.device") == "vivo",
    (
        format("ext4", "MMC", "/dev/block/mmcblk0p27");
    )
);
ifelse(
    getprop("ro.product.device") == "ace"     ||
    getprop("ro.product.device") == "glacier",
    (
        format("ext4", "EMMC", "/dev/block/mmcblk0p27");
    )
);
set_progress(1);
ui_print("-> Done.");
